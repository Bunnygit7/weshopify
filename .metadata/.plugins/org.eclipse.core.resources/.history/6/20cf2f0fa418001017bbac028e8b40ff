package com.weshopify.platform.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.weshopify.platform.beans.RoleBean;
import com.weshopify.platform.beans.UserBean;
import com.weshopify.platform.model.Wso2User;
import com.weshopify.platform.service.RoleMgmtService;
import com.weshopify.platform.service.UserMgmtService;

import lombok.extern.slf4j.Slf4j;


@RestController
@Slf4j
public class UserController {

	@Autowired
	public RoleMgmtService roleMgmtService;

	@Autowired
	public UserMgmtService userMgmtService;
	
	@PostMapping("/users")
	public ResponseEntity<List<UserBean>> createUser(@Valid @RequestBody UserBean userBean) {
		log.info("Weshopify user data is:" + userBean.toString());
		List<UserBean> usersList=userMgmtService.createUser(userBean);
		return ResponseEntity.ok(usersList);
	}

	@GetMapping("/users")
	public ResponseEntity<List<UserBean>> findAllUsers() {
		List<UserBean> usersList=userMgmtService.getAllUsers();
		return ResponseEntity.ok(usersList);
	}

	@GetMapping("/users/{userId}")
	public ResponseEntity<UserBean> findUserById(@PathVariable String userId) {
		log.info(userId);
		UserBean user=userMgmtService.getUser(userId);
		
		return ;
	}

	@PutMapping("/users")
	public ResponseEntity<List<UserBean>> updateUser(@RequestBody UserBean userBean) {
		log.info("Weshopify user data is:" + userBean);
		return null;
	}
	
	@DeleteMapping("/users/{userId}")
	public ResponseEntity<List<UserBean>> deleteUserById(@PathVariable String userId){
		return null;
	}
	
	@GetMapping("/roles")
	public ResponseEntity<List<RoleBean>> findAllRoles() {
		List<RoleBean> rolesList=roleMgmtService.getAllRoles();
		ResponseEntity<List<RoleBean>> response=null;
		if(rolesList!=null && rolesList.size()>0) {
			response=ResponseEntity.ok().body(rolesList);
		}
		else {
			response=ResponseEntity.noContent().build();
			
		}
		return response;
	}
	
	@PostMapping("/users/roles")
	public ResponseEntity<List<RoleBean>> createRole(@RequestBody RoleBean roleBean) {
		List<RoleBean> role=roleMgmtService.createRole(roleBean);
		ResponseEntity<List<RoleBean>> response=null;
		if(role!=null && role.size()>0) {
			response=ResponseEntity.ok().body(role);
		}else {
			response=ResponseEntity.noContent().build();
		}
		
		return response;
	}
	
	
}
