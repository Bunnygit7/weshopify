package com.weshopify.platform.advices;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import com.weshopify.platform.exceptions.APIException;
import com.weshopify.platform.validations.UserMessage;
import com.weshopify.platform.validations.UserValidations;

@RestControllerAdvice
public class UserMgmtExceptionHandler extends ResponseEntityExceptionHandler {
	@Override
	protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,
			HttpHeaders headers, HttpStatus status, WebRequest request) {
		List<UserMessage> errorList=new ArrayList<>();
		ex.getBindingResult().getAllErrors().stream().forEach(error -> {
			UserMessage userMessage = UserMessage
										.builder()
										.message(error.getDefaultMessage())
										.statusCode(status.value())
										.timeStamp(new Date())
										.build();
			errorList.add(userMessage);
		});
		UserValidations userValidations=UserValidations.builder().messages(errorList).build();
		return ResponseEntity.badRequest().body(userValidations);
	}
	
	public ResponseEntity<Object> handleAPIException(APIException apiException){
		UserMessage userMessage=UserMessage
									.builder()
									.message(apiException.getErrorMsg())
									.statusCode(apiException.getErrorCode())
									.timeStamp(new Date())
									.build();
		
		return ResponseEntity.badRequest().body(userMessage);
		
	}

}
